"""
Indicates exactly one field must be supplied and this field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

type Asset {
  class: AssetClass!
  id: ID!
  ticker: String!
}

type AssetClass {
  id: ID!
  name: String!
}

input CreateAssetClassInput {
  name: String!
}

input CreateAssetInput {
  assetClassId: ID!
  ticker: String!
}

input GetUserPortfolioRequest {
  userId: Int!
}

type GetUserPortfolioResponse {
  portfolio: Portfolio!
}

input ListAssetsClassesRequest {
  query: String!
}

type ListAssetsClassesResponse {
  assetClasses: [AssetClass]!
}

input ListAssetsRequest {
  query: String!
}

type ListAssetsResponse {
  assets: [Asset]!
}

input LoginRequest {
  email: String!
  password: String!
}

type LoginResponse {
  token: String!
}

type Mutation {
  createAsset(createAssetInput: CreateAssetInput): Boolean!
  createAssetClass(createAssetClassInput: CreateAssetClassInput): Boolean!
  createPortfolio: Portfolio!
  login(loginRequest: LoginRequest!): LoginResponse!
  register(registerRequest: RegisterRequest!): RegisterResponse!
  registerOperation(registerOperationInput: RegisterOperationInput): Boolean!
}

type Operation {
  asset: Asset!
  createdAt: String!
  price: Float!
  quantity: Int!
  type: OperationType!
}

input OperationInput {
  assetId: ID!
  price: Float!
  quantity: Int!
  type: OperationType!
}

enum OperationType {
  BUY
  SELL
}

type Portfolio {
  assets: [PortfolioAsset!]!
}

type PortfolioAsset {
  averagePrice: Float!
  className: String!
  cumulativeTotal: Float!
  id: ID!
  ticker: String!
  totalAmount: Int!
}

type Query {
  getUserPortfolio(getUserPortfolioRequest: GetUserPortfolioRequest): GetUserPortfolioResponse!
  listAssets(listAssetsRequest: ListAssetsRequest): ListAssetsResponse
  listAssetsClasses(listAssetsClassesRequest: ListAssetsClassesRequest!): ListAssetsClassesResponse
}

input RegisterOperationInput {
  operation: OperationInput!
  portfolioId: ID!
}

input RegisterRequest {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

type RegisterResponse {
  token: String!
}
